taskKey="com.javarush.games.snake.part08"\n\nИгра змейка (8/20)

Каждый ход змейка должна перемещаться. Ход занимает определенный промежуток времени, который ты можешь задать.

Для определения логики передвижения змейки, в классе Snake создай
метод void move(). В классе SnakeGame переопредели родительский метод onTurn(int). Всё, что должно происходить в игре на протяжении одного хода,
описывается здесь. После передвижения змейки не забудь перерисовать игровое поле.

Для установки продолжительности хода, создай переменную turnDelay. Игра будет начинаться со скоростью 300мс/ход. Установи продолжительность хода
в момент создания игры.


Требования:
1.	В классе Snake должен существовать публичный метод void move().
2.	В классе SnakeGame должен быть переопределен метод onTurn(int) родительского класса Game.
3.	В методе onTurn(int) у объекта snake должен быть вызван метод move().
4.	В методе onTurn(int) должен быть вызван метод drawScene() после вызова snake.move().
5.	В классе SnakeGame должно существовать приватное поле turnDelay типа int.
6.	В методе createGame() поле turnDelay должно быть инициализировано значением 300.
7.	В методе createGame() должен вызываться метод setTurnTimer(int). В качестве параметра передай turnDelay.


Игра змейка (8/20)

Каждый ход змейка должна перемещаться. Ход занимает определенный промежуток времени, который ты можешь задать.

Для определения логики передвижения змейки, в классе Snake создай
метод void move(). В классе SnakeGame переопредели родительский метод onTurn(int). Всё, что должно происходить в игре на протяжении одного хода,
описывается здесь. После передвижения змейки не забудь перерисовать игровое поле.

Для установки продолжительности хода, создай переменную turnDelay. Игра будет начинаться со скоростью 300мс/ход. Установи продолжительность хода
в момент создания игры.



Игра змейка (8/20)

Каждый ход змейка должна перемещаться. Ход занимает определенный промежуток времени, который ты можешь задать.

Для определения логики передвижения змейки, в классе Snake создай
метод void move(). В классе SnakeGame переопредели родительский метод onTurn(int). Всё, что должно происходить в игре на протяжении одного хода,
описывается здесь. После передвижения змейки не забудь перерисовать игровое поле.

Для установки продолжительности хода, создай переменную turnDelay. Игра будет начинаться со скоростью 300мс/ход. Установи продолжительность хода
в момент создания игры.



Игра змейка (8/20)

Каждый ход змейка должна перемещаться. Ход занимает определенный промежуток времени, который ты можешь задать.

Для определения логики передвижения змейки, в классе Snake создай
метод void move(). В классе SnakeGame переопредели родительский метод onTurn(int). Всё, что должно происходить в игре на протяжении одного хода,
описывается здесь. После передвижения змейки не забудь перерисовать игровое поле.

Для установки продолжительности хода, создай переменную turnDelay. Игра будет начинаться со скоростью 300мс/ход. Установи продолжительность хода
в момент создания игры.



Игра змейка (8/20)

Каждый ход змейка должна перемещаться. Ход занимает определенный промежуток времени, который ты можешь задать.

Для определения логики передвижения змейки, в классе Snake создай
метод void move(). В классе SnakeGame переопредели родительский метод onTurn(int). Всё, что должно происходить в игре на протяжении одного хода,
описывается здесь. После передвижения змейки не забудь перерисовать игровое поле.

Для установки продолжительности хода, создай переменную turnDelay. Игра будет начинаться со скоростью 300мс/ход. Установи продолжительность хода
в момент создания игры.



Игра змейка (8/20)

Каждый ход змейка должна перемещаться. Ход занимает определенный промежуток времени, который ты можешь задать.

Для определения логики передвижения змейки, в классе Snake создай
метод void move(). В классе SnakeGame переопредели родительский метод onTurn(int). Всё, что должно происходить в игре на протяжении одного хода,
описывается здесь. После передвижения змейки не забудь перерисовать игровое поле.

Для установки продолжительности хода, создай переменную turnDelay. Игра будет начинаться со скоростью 300мс/ход. Установи продолжительность хода
в момент создания игры.



