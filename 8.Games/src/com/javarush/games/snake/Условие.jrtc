taskKey="com.javarush.games.snake.part13"\n\nИгра змейка (13/20)

До этого мы устанавливали координаты яблока вручную. Необходимо создать метод для генерации новых яблок. Назовем его createNewApple().
Метод должен генерировать случайные координаты ячейки в пределах игрового поля, на которой будет появляться яблоко. Ссылку на новосозданное
яблоко присвой полю apple. Также в конце каждого хода нужно проверить, "живое" ли текущее яблоко, если нет — создать новое.
Для генерирования случайных чисел вызывай метод родительского класса getRandomNumber(int).


Требования:
1.	В классе SnakeGame должен существовать приватный метод void createNewApple().
2.	В методе createNewApple() должен два раза вызываться метод getRandomNumber(int). Первый раз &mdash; с параметром WIDTH, второй &mdash; c HEIGHT.
3.	В методе createNewApple() должен создаваться новый объект типа Apple. В качестве параметров передай результаты двух вызовов метода getRandomNumber(int).
4.	Полю apple должна присваиваться ссылка на созданный объект типа Apple.
5.	В методе createGame() не должен создаваться новый объект типа Apple.
6.	В методе createGame() должен вызываться метод createNewApple() перед методом drawScene().
7.	В методе onTurn() перед вызовом метода drawScene(), если apple.isAlive == false, необходимо вызвать метод createNewApple().


Игра змейка (13/20)

До этого мы устанавливали координаты яблока вручную. Необходимо создать метод для генерации новых яблок. Назовем его createNewApple().
Метод должен генерировать случайные координаты ячейки в пределах игрового поля, на которой будет появляться яблоко. Ссылку на новосозданное
яблоко присвой полю apple. Также в конце каждого хода нужно проверить, "живое" ли текущее яблоко, если нет — создать новое.
Для генерирования случайных чисел вызывай метод родительского класса getRandomNumber(int).



Игра змейка (13/20)

До этого мы устанавливали координаты яблока вручную. Необходимо создать метод для генерации новых яблок. Назовем его createNewApple().
Метод должен генерировать случайные координаты ячейки в пределах игрового поля, на которой будет появляться яблоко. Ссылку на новосозданное
яблоко присвой полю apple. Также в конце каждого хода нужно проверить, "живое" ли текущее яблоко, если нет — создать новое.
Для генерирования случайных чисел вызывай метод родительского класса getRandomNumber(int).



Игра змейка (13/20)

До этого мы устанавливали координаты яблока вручную. Необходимо создать метод для генерации новых яблок. Назовем его createNewApple().
Метод должен генерировать случайные координаты ячейки в пределах игрового поля, на которой будет появляться яблоко. Ссылку на новосозданное
яблоко присвой полю apple. Также в конце каждого хода нужно проверить, "живое" ли текущее яблоко, если нет — создать новое.
Для генерирования случайных чисел вызывай метод родительского класса getRandomNumber(int).



Игра змейка (13/20)

До этого мы устанавливали координаты яблока вручную. Необходимо создать метод для генерации новых яблок. Назовем его createNewApple().
Метод должен генерировать случайные координаты ячейки в пределах игрового поля, на которой будет появляться яблоко. Ссылку на новосозданное
яблоко присвой полю apple. Также в конце каждого хода нужно проверить, "живое" ли текущее яблоко, если нет — создать новое.
Для генерирования случайных чисел вызывай метод родительского класса getRandomNumber(int).



Игра змейка (13/20)

До этого мы устанавливали координаты яблока вручную. Необходимо создать метод для генерации новых яблок. Назовем его createNewApple().
Метод должен генерировать случайные координаты ячейки в пределах игрового поля, на которой будет появляться яблоко. Ссылку на новосозданное
яблоко присвой полю apple. Также в конце каждого хода нужно проверить, "живое" ли текущее яблоко, если нет — создать новое.
Для генерирования случайных чисел вызывай метод родительского класса getRandomNumber(int).



