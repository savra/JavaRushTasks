taskKey="com.javarush.games.snake.part16"\n\nИгра змейка (16/20)

Игра должна останавливаться и в случае победы. Победа наступает, когда змейка увеличивается до определённого размера. Для хранения этого размера
в классе SnakeGame создай константу GOAL и инициализируй её значением 28. Для определения текущего размера змейки в классе Snake, создай
метод getLength() и реализуй его. По аналогии с методом gameOver(), создай и реализуй метод win(). Только вместо надписи "GAME OVER" он должен
выводить "YOU WIN". Проверка победы также производится в конце каждого хода.


Требования:
1.	В классе SnakeGame должно существовать приватное статическое final int поле GOAL, инициализированное при объявлении значением 28.
2.	В классе Snake должен существовать публичный метод int getLength(), который возвращает количество сегментов змеи в списке snakeParts.
3.	В классе SnakeGame должен существовать приватный метод void win().
4.	В методе win() должен вызываться метод stopTurnTimer().
5.	В методе win() полю isGameStopped должно устанавливаться значение true.
6.	В методе win() должен вызываться метод showMessageDialog(Color, String, Color, int).
7.	В методе onTurn(int) должен вызываться метод win() перед методом drawScene(), если значение, возвращенное методом getLength(), больше чем GOAL.


Игра змейка (16/20)

Игра должна останавливаться и в случае победы. Победа наступает, когда змейка увеличивается до определённого размера. Для хранения этого размера
в классе SnakeGame создай константу GOAL и инициализируй её значением 28. Для определения текущего размера змейки в классе Snake, создай
метод getLength() и реализуй его. По аналогии с методом gameOver(), создай и реализуй метод win(). Только вместо надписи "GAME OVER" он должен
выводить "YOU WIN". Проверка победы также производится в конце каждого хода.



Игра змейка (16/20)

Игра должна останавливаться и в случае победы. Победа наступает, когда змейка увеличивается до определённого размера. Для хранения этого размера
в классе SnakeGame создай константу GOAL и инициализируй её значением 28. Для определения текущего размера змейки в классе Snake, создай
метод getLength() и реализуй его. По аналогии с методом gameOver(), создай и реализуй метод win(). Только вместо надписи "GAME OVER" он должен
выводить "YOU WIN". Проверка победы также производится в конце каждого хода.



Игра змейка (16/20)

Игра должна останавливаться и в случае победы. Победа наступает, когда змейка увеличивается до определённого размера. Для хранения этого размера
в классе SnakeGame создай константу GOAL и инициализируй её значением 28. Для определения текущего размера змейки в классе Snake, создай
метод getLength() и реализуй его. По аналогии с методом gameOver(), создай и реализуй метод win(). Только вместо надписи "GAME OVER" он должен
выводить "YOU WIN". Проверка победы также производится в конце каждого хода.



Игра змейка (16/20)

Игра должна останавливаться и в случае победы. Победа наступает, когда змейка увеличивается до определённого размера. Для хранения этого размера
в классе SnakeGame создай константу GOAL и инициализируй её значением 28. Для определения текущего размера змейки в классе Snake, создай
метод getLength() и реализуй его. По аналогии с методом gameOver(), создай и реализуй метод win(). Только вместо надписи "GAME OVER" он должен
выводить "YOU WIN". Проверка победы также производится в конце каждого хода.



Игра змейка (16/20)

Игра должна останавливаться и в случае победы. Победа наступает, когда змейка увеличивается до определённого размера. Для хранения этого размера
в классе SnakeGame создай константу GOAL и инициализируй её значением 28. Для определения текущего размера змейки в классе Snake, создай
метод getLength() и реализуй его. По аналогии с методом gameOver(), создай и реализуй метод win(). Только вместо надписи "GAME OVER" он должен
выводить "YOU WIN". Проверка победы также производится в конце каждого хода.



