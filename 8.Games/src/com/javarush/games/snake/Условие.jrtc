taskKey="com.javarush.games.snake.part14"\n\nИгра змейка (14/20)

Сейчас змейка может ходить сквозь свое тело, а это не по правилам. Чтобы это исправить, нужно проверять новосозданную голову змейки на совпадение
со всеми остальными элементами её тела. Для этого в классе Snake создай метод checkCollision(GameObject). Метод checkCollision(GameObject) должен
возвращать true, если координаты переданного объекта совпадают с координатами одного из элементов тела змейки. Также в методе move(Apple) добавь
проверку на столкновения новой головы и тела. Если было столкновение, установи переменной isAlive значение false.


Требования:
1.	В классе Snake должен существовать публичный метод boolean checkCollision(GameObject).
2.	Метод checkCollision(GameObject) должен возвращать true, если координаты объекта, пришедшего параметром, совпали с координатами одного из элементов змеи (список snakeParts).
3.	Метод checkCollision(GameObject) должен возвращать false, если координаты объекта, пришедшего параметром, не совпали с координатами всех элементов змеи (список snakeParts).
4.	В методе move(Apple) должен быть вызван метод checkCollision(GameObject) с параметром &lt;новая голова&gt; перед добавлением нового сегмента змеи в список snakeParts.
5.	Если вызов метода checkCollision(GameObject) вернул true, полю isAlive необходимо установить значение false.
6.	Если вызов метода checkCollision(GameObject) вернул true, содержимое списка snakeParts не должно изменяться.


Игра змейка (14/20)

Сейчас змейка может ходить сквозь свое тело, а это не по правилам. Чтобы это исправить, нужно проверять новосозданную голову змейки на совпадение
со всеми остальными элементами её тела. Для этого в классе Snake создай метод checkCollision(GameObject). Метод checkCollision(GameObject) должен
возвращать true, если координаты переданного объекта совпадают с координатами одного из элементов тела змейки. Также в методе move(Apple) добавь
проверку на столкновения новой головы и тела. Если было столкновение, установи переменной isAlive значение false.



Игра змейка (14/20)

Сейчас змейка может ходить сквозь свое тело, а это не по правилам. Чтобы это исправить, нужно проверять новосозданную голову змейки на совпадение
со всеми остальными элементами её тела. Для этого в классе Snake создай метод checkCollision(GameObject). Метод checkCollision(GameObject) должен
возвращать true, если координаты переданного объекта совпадают с координатами одного из элементов тела змейки. Также в методе move(Apple) добавь
проверку на столкновения новой головы и тела. Если было столкновение, установи переменной isAlive значение false.



Игра змейка (14/20)

Сейчас змейка может ходить сквозь свое тело, а это не по правилам. Чтобы это исправить, нужно проверять новосозданную голову змейки на совпадение
со всеми остальными элементами её тела. Для этого в классе Snake создай метод checkCollision(GameObject). Метод checkCollision(GameObject) должен
возвращать true, если координаты переданного объекта совпадают с координатами одного из элементов тела змейки. Также в методе move(Apple) добавь
проверку на столкновения новой головы и тела. Если было столкновение, установи переменной isAlive значение false.



Игра змейка (14/20)

Сейчас змейка может ходить сквозь свое тело, а это не по правилам. Чтобы это исправить, нужно проверять новосозданную голову змейки на совпадение
со всеми остальными элементами её тела. Для этого в классе Snake создай метод checkCollision(GameObject). Метод checkCollision(GameObject) должен
возвращать true, если координаты переданного объекта совпадают с координатами одного из элементов тела змейки. Также в методе move(Apple) добавь
проверку на столкновения новой головы и тела. Если было столкновение, установи переменной isAlive значение false.



Игра змейка (14/20)

Сейчас змейка может ходить сквозь свое тело, а это не по правилам. Чтобы это исправить, нужно проверять новосозданную голову змейки на совпадение
со всеми остальными элементами её тела. Для этого в классе Snake создай метод checkCollision(GameObject). Метод checkCollision(GameObject) должен
возвращать true, если координаты переданного объекта совпадают с координатами одного из элементов тела змейки. Также в методе move(Apple) добавь
проверку на столкновения новой головы и тела. Если было столкновение, установи переменной isAlive значение false.



